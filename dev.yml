version: '3'

volumes:
  cs_api_dev_postgres_data: {}
  cs_api_dev_postgres_data_backups: {}
  cs_api_dev_public: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/dev/django/Dockerfile
    image: cs_api_dev_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.dev/.django
      - ./.envs/.dev/.postgres
    command: /start
    volumes:
      - cs_api_dev_public:/app/public
      - /home/ubuntu/cs-api/logs:/app/logs

  postgres:
    build:
      context: .
      dockerfile: ./compose/dev/postgres/Dockerfile
    image: cs_api_dev_postgres
    volumes:
      - cs_api_dev_postgres_data:/var/lib/postgresql/data:Z
      - cs_api_dev_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.dev/.postgres

  nginx:
    build:
      context: ./compose/dev/nginx/
      dockerfile: Dockerfile
    depends_on:
      - django
    volumes:
      - /home/ubuntu/cs-api/logs:/var/log/nginx
      - cs_api_dev_public:/app/public
    ports:
      - 80:80
    restart: on-failure

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: cs_api_dev_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cs_api_dev_celerybeat
    command: /start-celerybeat

#  flower:
#    <<: *django
#    image: cs_api_dev_flower
#    command: /start-flower
